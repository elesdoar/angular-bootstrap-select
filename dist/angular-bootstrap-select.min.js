angular.module("angular-bootstrap-select",[]).directive("abSelect",function($timeout,$log){return{restrict:"EA",replace:!0,require:["?ngModel","?ngOptions"],scope:!1,transclude:!1,templateUrl:"angular-bootstrap-select/select.html",link:function(scope,element,attrs,ngModel){function refresh(newVal){$log.debug("New Val",newVal),angular.isUndefined(newVal)||scope.$applyAsync(function(){attrs.ngOptions&&/track by/.test(attrs.ngOptions)&&element.selectpicker("val",newVal),element.selectpicker("refresh")})}$log.debug("Angular Select Bootstrap",scope),ngModel&&($timeout(function(){element.selectpicker(attrs),element.selectpicker("refresh"),element.selectpicker("render")}),attrs.ngModel&&scope.$watch(attrs.ngModel,refresh,!0),attrs.ngDisabled&&scope.$watch(attrs.ngDisabled,refresh,!0),scope.$watch("selected",function(val){val&&$log.debug("Val",val)},!0),scope.$on("$destroy",function(){$timeout(function(){element.selectpicker("destroy")})}))}}}),angular.module("angular-bootstrap-select").factory("selectHelpers",function(){return{}}),angular.module("angular-bootstrap-select").run(["$templateCache",function($templateCache){$templateCache.put("angular-bootstrap-select/select.html",'<select class="angular-select">\n    <option style="display:none" value="">Select</option>\n<select>\n')}]);